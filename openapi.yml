openapi: 3.0.3
info:
  title: Social Network API
  version: 1.0.0
  description: Set of APIs for Social Network project
paths:
  /auth/activity:
    get:
      operationId: auth_activity_retrieve
      description: Returns user activity data
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivity'
          description: ''
  /auth/login:
    post:
      operationId: auth_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /auth/register:
    post:
      operationId: auth_register_create
      description: Creates a new user
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /auth/token/refresh:
    post:
      operationId: auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /posts/:
    get:
      operationId: posts_retrieve
      description: Returns a list of Post model instances.
      tags:
      - posts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    post:
      operationId: posts_create
      description: Creates a new post by authenticated user
      tags:
      - posts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
  /posts/{post_id}/dislikes:
    delete:
      operationId: posts_dislikes_destroy
      description: Removes the like user gave the post
      parameters:
      - in: path
        name: post_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - posts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /posts/{post_id}/likes:
    post:
      operationId: posts_likes_create
      description: Creates a like on the post
      parameters:
      - in: path
        name: post_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - posts
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /posts/likes/analytics:
    get:
      operationId: posts_likes_analytics_retrieve
      description: Takes dates range in params to return the amount of likes made
        that day grouped by dates
      parameters:
      - in: query
        name: date_from
        schema:
          type: string
        description: Category Id
      - in: query
        name: date_to
        schema:
          type: string
        description: Category Id
      tags:
      - posts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLikeAnalytics'
          description: ''
components:
  schemas:
    Post:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        is_liked:
          type: boolean
          readOnly: true
        title:
          type: string
          maxLength: 200
        body:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        modified_at:
          type: string
          format: date-time
          readOnly: true
        likes_number:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        author:
          type: integer
      required:
      - author
      - body
      - created_at
      - id
      - is_liked
      - modified_at
      - title
    PostCreate:
      type: object
      properties:
        body:
          type: string
        title:
          type: string
      required:
      - body
      - title
    PostLikeAnalytics:
      type: object
      properties:
        date:
          type: string
          format: date
        likes_count:
          type: integer
      required:
      - date
      - likes_count
    Register:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
        email:
          type: string
          format: email
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - first_name
      - last_name
      - password
      - password2
      - username
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    UserActivity:
      type: object
      properties:
        last_request_at:
          type: string
          format: date-time
        last_login_at:
          type: string
          format: date-time
      required:
      - last_login_at
      - last_request_at
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
